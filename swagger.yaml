swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /users/{id}/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Get all User Accounts
      description: API for getting all user accounts
      parameters:
        - in: header
          name: Authorization
          description: "Attach Bearer JWT token"
          required: true
          type: string
        - in: path
          name: id
          description: User's ID
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Accounts retrieved successully
          schema:
            $ref: "#/definitions/Accounts"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /accounts/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Get User Account
      description: API for getting a user account
      parameters:
        - in: header
          name: Authorization
          description: "Attach Bearer JWT token"
          required: true
          type: string
        - in: path
          name: id
          description: User's ID
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Account retrieved successully
          schema:
            $ref: "#/definitions/Account"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Get user's account transactions for the current month
      description: API for getting the user's account transactions for the current month
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User's account transactions retrieved successfully
          schema:
            $ref: "#/definitions/AccountTransactions"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Get Transaction by Id
      description: API for getting the transaction by Id
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          description: Transaction Id
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User's transaction retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /transactions/categories:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Get the list of the user categories
      description: Getting the list of the user categories.
      produces:
        - application/json
      responses:
        "200":
          description: List of categories retrieved successfully.
          schema:
            type: array
            items:
              $ref: "#/definitions/Category"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /transactions/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Update user transaction category
      description: API for updating a transaction category
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          description: Account Transaction ID
          type: string
          required: true
        - in: body
          name: body
          description: Category Payload
          required: true
          schema:
            $ref: "#/definitions/TransactionCategory"
      responses:
        "200":
          description: Transaction category updated successfully
          schema:
            $ref: "#/definitions/TransactionCategory"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Delete user transaction category
      description: API for deleting a transaction category
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          description: Account Transaction ID
          type: string
          required: true
      responses:
        "200":
          description: Transaction category deleted successfully
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /transactions/{transactionId}/note:
    put:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Update user transaction note
      description: API for updating a transaction note
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          description: Account Transaction ID
          type: string
          required: true
        - in: body
          name: body
          description: Note Payload
          required: true
          schema:
            $ref: "#/definitions/TransactionNote"
      responses:
        "200":
          description: Transaction note updated successfully
          schema:
            $ref: "#/definitions/TransactionNote"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Delete user transaction note
      description: API for deleting a transaction note
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          description: Account Transaction ID
          type: string
          required: true
      responses:
        "200":
          description: Transaction note deleted successfully
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Accounts:
    type: array
    items:
      $ref: "#/definitions/Account"
  Account:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      amount:
        type: number
      description:
        type: string
  AccountTransactions:
    type: array
    items:
      $ref: "#/definitions/Transaction"
  Transaction:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
      description:
        type: string
      amount:
        type: number
      balance:
        type: string
      transaction_type:
        type: string
      category:
        type: string
      note:
        type: string
  TransactionCategory:
    type: object
    properties:
      category:
        type: string
        description: transaction category
  TransactionNote:
    type: object
    properties:
      note:
        type: string
        description: transaction note
  Category:
    type: object
    properties:
      categoryId:
        type: integer
        description: Unique identifier for the category.
      categoryLabel:
        type: string
        description: Human-readable label for the category.

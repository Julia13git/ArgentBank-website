swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /users/{id}/accounts:
    get:
      tags:
        - User Transactions
      summary: User Accounts
      description: API for getting all accounts
      parameters:
        - in: header
          name: Authorization
          description: "Attach Bearer JWT token"
          required: true
          type: string
        - in: path
          name: id
          description: User's ID
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Accounts retrieved successully
          schema:
            $ref: "#/definitions/Accounts"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /accounts/{accountId}/transactions:
    get:
      tags:
        - User Transactions
      summary: User Account Transactions
      description: API for getting the user's account transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User's account transactions retrieved successully
          schema:
            $ref: "#/definitions/AccountTransactions"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/{transactionId}/category:
    put:
      tags:
        - User Transactions
      summary: User Transaction Category
      description: API for updating transactions' categories
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          description: Account Transaction ID
          type: string
          required: true
        - in: body
          name: body
          description: Category Payload
          required: true
          schema:
            $ref: "#/definitions/Category"
      responses:
        "200":
          description: Transaction's category updated successully
          schema:
            $ref: "#/definitions/Category"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/{transactionId}/note:
    put:
      tags:
        - User Transactions
      summary: User Transaction Note
      description: API for updating transactions' notes
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          description: Transaction's ID
          required: true
          type: string
        - in: body
          name: body
          required: true
          description: Note Payload
          schema:
            $ref: "#/definitions/Note"
      responses:
        "200":
          description: Transaction updated successully
          schema:
            $ref: "#/definitions/Note"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Accounts:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        amount:
          type: number
        description:
          type: string
  AccountTransactions:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
        description:
          type: string
        amount:
          type: number
        balance:
          type: string
        transaction_type:
          type: string
        category:
          type: string
        note:
          type: string
  Category:
    type: object
    properties:
      category:
        type: string
        description: Edit transaction category
  Note:
    type: object
    properties:
      note:
        type: string
        description: Edit transaction note
